trigger:
- main

pool:
  name: default
  demands:
  - Encompass

variables:
  solution: '**/*.sln'
  mainProject: './EncompassDeploymentTool/EncompassDeploymentTool.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- powershell: |
    [xml]$xmlDoc = Get-Content -Path '$(mainProject)'
    $version = ([string]$xmlDoc.Project.PropertyGroup.Version).Trim()

    Write-Host "Got Version Number $version"
    Write-Host "##vso[task.setvariable variable=Version]$version"

    if ('$(Build.SourceBranchName)' -ne 'master')
    {
        $suffix = "-$(Build.SourceBranchName).$(Build.BuildId)"
        Write-Host "Got Version Suffix $suffix"
        Write-Host "##vso[task.setvariable variable=Version]$version$suffix"
    }
  displayName: Determine Version Number
  workingDirectory: $(Build.SourcesDirectory)

# While this job is not building any .NET Core projects per se, we are using
# the new .csproj format, so we need the .NET Core SDK to be around to provide
# some of the requisite MSBuild tasks.
- task: UseDotNet@2
  inputs:
    version: 3.1.x

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    clean: true
    msbuildArgs: '/p:OutputPath=$(Build.BinariesDirectory)'

- task: DeleteFiles@1
  inputs:
    sourceFolder: '$(Build.BinariesDirectory)'
    contents: EllieMae.*

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: false
    archiveFile: '$(Build.StagingDirectory)\encompass-deploy-$(Version).zip'

- task: PublishBuildArtifacts@1

- task: KriefMikael.githubtools.GitHubTag.GitHubTag@1
  displayName: Tag Version
  inputs:
    githubEndpoint: 'panorama-mortgage-group'
    tag: 'v$(Version)'
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))